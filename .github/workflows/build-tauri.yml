# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build (Tauri)

on:
  push:
    branches: [ "tauri" ]
  pull_request:
    branches: [ "tauri" ]

jobs:
  build:
    timeout-minutes: 30
    permissions:
      contents: write
    name: Build ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-latest', 'macos-latest', 'ubuntu-latest' ]
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.7'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: install dependencies (ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt install -y libjavascriptcoregtk-4.1-dev libsoup-3.0-dev libgtksourceview-3.0-dev webkit2gtk-driver xvfb libwebkit2gtk-4.1-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    # - run: npm run build
    # - run: npm run test
    # - run: npm run tauri build --release
    #- uses: actions/upload-artifact@v3
    #  with:
    #    name: ${{ runner.OS }}
    #    path: src-tauri/target/${{ runner.arch }}/ergo-wallet-*.*

    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
        releaseName: 'Ergo Wallet v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
        releaseBody: 'See the assets to download and install this version.'
        releaseDraft: true
        prerelease: false
